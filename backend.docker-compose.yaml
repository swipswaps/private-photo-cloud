version: '2'

services:
  postgres:
    image: postgres:9.6.1-alpine
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app
      PGDATA: /var/lib/postgresql/data
  redis:
    image: redis:3.2.6-alpine
    command:
      - redis-server
      - --appendonly
      - 'yes'
  backend: &BACKEND
    build:
      context: .
      dockerfile: backend.Dockerfile
    links:
      - postgres
      - redis
    environment: &BACKEND_ENV
      PYTHONUNBUFFERED: 1
      PYTHONIOENCODING: utf-8
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONWARNINGS: all
      DATABASE_URL: postgres://user:password@postgres/app
      CHANNEL_REDIS_HOST: redis
      CHANNEL_REDIS_PORT: 6379
      CACHE_URL: redis://redis:6379/0?timeout=300
      CACHE_PERSISTENT_URL: redis://redis:6379/1
      EMAIL_URL: console://
      CELERY_BROKER_URL: redis://redis/2
# Do not store results of Celery tasks
      # CELERY_RESULT_URL: redis://redis/3
      DJANGO_SETTINGS_MODULE: private_photo_cloud.settings.default
      DJANGO_DEBUG: 1
      DJANGO_TEMPLATE_DEBUG: 1
    volumes:
      - .:/home/app
      - ./media:/home/app/media
    working_dir: /home/app
    ports:
      - 80:80
    restart: unless-stopped
    command:
      - sh
      - -ec
      - until psql $$DATABASE_URL -c "--" 2>/dev/null; do
          echo "wait...";
          sleep 1;
        done;
        ./manage.py migrate;
        ./manage.py shell -c 'from django.contrib.auth.models import User; u, _ = User.objects.get_or_create(username="admin", is_superuser=True, is_staff=True, is_active=True);u.set_password("password");u.save();';
        exec ./manage.py runserver 0.0.0.0:80
  worker:
    <<: *BACKEND
    ports: []
    user: nobody
    environment:
      <<: *BACKEND_ENV
      DJANGO_DEBUG: 0
    command:
      - celery
      - -A
      - private_photo_cloud
      - worker
      - --loglevel=INFO
      - --concurrency=4
# TODO: Consider adding separate asgi worker https://channels.readthedocs.io/en/stable/deploying.html#running-asgi-alongside-wsgi
